Here is an example of json code for a box:
{

	"id": "element3",
	"type": "Box",
	"drawX": 100,
	"drawY": 50,
	"width": 500,
	"height": 200,
	"primaryColor": [100,0,100,0],
	"borderThickness": 0,
	"boxOutlineColor": [0,128,128,0]

}
Here is an example of json code for a text:
{

        "id": "element1",
        "type": "Text",
        "drawX": 0,
        "drawY": 0,
        "text": "This is a test",
        "textSize": 50,
        "textColor": [100,100,100,1]
        
 }
Here is an example of json code for a button:
{
     	"id":"button1",
     	"type":"Button",
     	"drawX":860,
     	"drawY":640,
     	"width":200,
     	"height":50,
     	"text":"Click me!",
     	"textSize":20,
     	"borderThickness":2,
     	"textColor":[255,255,255,1],
     	"primaryColor":[100,0,100,1],
     	"boxOutlineColor":[0,128,128,1],
     	"rounded":true,
     	"textCentered":true
     }
Here is an example of json code for a textbox:
{
	
        "id": "element3",
        "type": "TextBox",
        "drawX": 100,
        "drawY": 50,
        "width": 100,
        "height": 100,
        "text": "This is a test",
        "textSize": 20,
        "borderThickness": 0,
        "textColor": [100,0,100,0],
        "primaryColor": [100,0,100,0],
        "boxOutlineColor": [0,128,128,0],
		"underlineColor": [0, 0, 0, 0,
        "textBoxRounded":true,
        "textCentered":true,
		"hasUnderLine": true,
	
    }
Here is example json  code for a layout consisting of these two elements:
[
	{

	"id": "element3",
	"type": "Box",
	"drawX": 100,
	"drawY": 50,
	"width": 500,
	"height": 200,
	"primaryColor": [100,0,100,0],
	"borderThickness": 0,
	"boxOutlineColor": [0,128,128,0]

	},
	{

			"id": "element1",
			"type": "Text",
			"drawX": 0,
			"drawY": 0,
			"text": "This is a test",
			"textSize": 50,
			"textColor": [100,100,100,1]
			
	}
]

"DrawX" is the x coordinate where the element is started to be drawn. 
"DrawY" is the y coordinate where the element is started to be drawn. (0,0) is the top left corner of the canvas. The rounded property in button is whether or not the button has rounded corners and textCentered is whether or not the text is centered within the button. The canvas size is 1920 wide and 1080 high.

Each layout can have as many elements as needed. The first element in the json array is drawn first and the last element in the json array is drawn last.
Using just these four available elements, make a layout as close to the google website as possible.Here is an example of json code for a box:
{

	"id": "element3",
	"type": "Box",
	"drawX": 100,
	"drawY": 50,
	"width": 500,
	"height": 200,
	"primaryColor": [100,0,100,0],
	"borderThickness": 0,
	"boxOutlineColor": [0,128,128,0]

}
Here is an example of json code for a text:
{

        "id": "element1",
        "type": "Text",
        "drawX": 0,
        "drawY": 0,
        "text": "This is a test",
        "textSize": 50,
        "textColor": [100,100,100,1]
        
 }
Here is an example of json code for a button:
{
     	"id":"button1",
     	"type":"Button",
     	"drawX":860,
     	"drawY":640,
     	"width":200,
     	"height":50,
     	"text":"Click me!",
     	"textSize":20,
     	"borderThickness":2,
     	"textColor":[255,255,255,1],
     	"primaryColor":[100,0,100,1],
     	"boxOutlineColor":[0,128,128,1],
     	"rounded":true,
     	"textCentered":true
     }
Here is an example of json code for a textbox:
{
	
        "id": "element3",
        "type": "TextBox",
        "drawX": 100,
        "drawY": 50,
        "width": 100,
        "height": 100,
        "text": "This is a test",
        "textSize": 20,
        "borderThickness": 0,
        "textColor": [100,0,100,0],
        "primaryColor": [100,0,100,0],
        "boxOutlineColor": [0,128,128,0],
		"underlineColor": [0, 0, 0, 0,
        "textBoxRounded":true,
        "textCentered":true,
		"hasUnderLine": true,
	
    }

Here is example json code for a checkmark box that can have a text label:
{

	"id": "element3",
	"type": "CheckMark",
	"drawX": 100,
	"drawY": 50,
	"width": 100,
	"height": 100,
	"text": "This is a test",
	"textSize": 20,
	"borderThickness": 0,
	"textColor": [100,0,100,0],
	"primaryColor": [100,0,100,0],
	"containerOutlineColor":[100,0,100,0],
	"checkmarkBoxFillColor": [0,128,128,0],
	"checkmarkBoxOutlineColor": [0, 0, 0, 0],
	"containerRounded":true,
	"buttonTextCentered":true,
	"checkMarkBoxRounded": true,

}

Here is example json code for a Radio Option element that can have a text label:
{
	"id": "element3",
	"type": "RadioOption",
	"drawX": 100,
	"drawY": 50,
	"width": 100,
	"height": 100,
	"text": "This is a test",
	"textSize": 20,
	"borderThickness": 0,
	"textColor": [100,0,100,0],
	"primaryColor": [100,0,100,0],
	"boxOutlineColor":[100,0,100,0],
	"circleFillColor": [0,128,128,0],
	"circleOutlineColor": [0, 0, 0, 0],
	"containerRounded":true,
	"containerTextCentered":true	
}

Here is example json code for a imageplaceholder element:
{

	"id": "element3",
	"type": "ImagePlaceholder",
	"drawX": 100,
	"drawY": 50,
	"width": 100,
	"height": 100,	
}

Here is example json code for a captcha element:
{

	"id": "element3",
	"type": "Captcha",
	"drawX": 100,
	"drawY": 50,
	"width": 100
}
	
"DrawX" is the x coordinate where the element is started to be drawn. 
"DrawY" is the y coordinate where the element is started to be drawn. (0,0) is the top left corner of the canvas. The rounded property in button is whether or not the button has rounded corners and textCentered is whether or not the text is centered within the button. The canvas size is 1920 wide and 1080 high.

Each layout can have as many elements as needed. The first element in the json array is drawn first and the last element in the json array is drawn last. Using just all of these available elements at least once, draw a layout for a survey form.